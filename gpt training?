from transformers import GPT2Tokenizer, GPT2LMHeadModel
from transformers import TextDataset, DataCollatorForLanguageModeling
from transformers import Trainer, TrainingArguments

# Load pre-trained GPT model and tokenizer
tokenizer = GPT2Tokenizer.from_pretrained("gpt2")
model = GPT2LMHeadModel.from_pretrained("gpt2")

# Load and preprocess your dataset
train_dataset = TextDataset(
    tokenizer=tokenizer,
    file_path="your_dataset.txt",  # Path to your dataset file
    block_size=128
)
data_collator = DataCollatorForLanguageModeling(
    tokenizer=tokenizer,
    mlm=False
)

# Fine-tune the GPT model on your dataset
training_args = TrainingArguments(
    output_dir="./gpt2-finetuned-obstacle",
    overwrite_output_dir=True,
    num_train_epochs=3,
    per_device_train_batch_size=8,
    save_steps=10_000,
    save_total_limit=2
)

trainer = Trainer(
    model=model,
    args=training_args,
    data_collator=data_collator,
    train_dataset=train_dataset
)

trainer.train()

# Save the fine-tuned model
model.save_pretrained("./gpt2-finetuned-obstacle")
tokenizer.save_pretrained("./gpt2-finetuned-obstacle")
