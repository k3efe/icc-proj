import time
import webbrowser
import requests
import pyttsx3
from geopy.geocoders import Nominatim

# Google Maps API key
API_KEY = 'your_api_key'

def get_directions(origin, destination):
    # Retrieve walking directions from Google Maps Directions API
    url = f'https://maps.googleapis.com/maps/api/directions/json?origin={origin}&destination={destination}&mode=walking&key={API_KEY}'
    response = requests.get(url)
    data = response.json()
    return data

def text_to_speech(text):
    # Use pyttsx3 library for text-to-speech conversion
    engine = pyttsx3.init()
    engine.say(text)
    engine.runAndWait()

def get_current_location():
    # Mocking current location (replace with GPS integration)
    return "40.7128, -74.0060"  # New York City

def get_destination():
    # Use geopy to convert user's spoken destination to GPS coordinates
    geolocator = Nominatim(user_agent="pedestrian_navigation")
    destination = input("Please say your destination: ")
    location = geolocator.geocode(destination)
    if location:
        return f"{location.latitude}, {location.longitude}"
    else:
        return None

def display_map(origin, destination):
    # Open web browser with Google Maps URL for the given origin and destination
    url = f'https://www.google.com/maps/dir/{origin}/{destination}'
    webbrowser.open(url)

def navigate(current_location, destination):
    # Get walking directions
    directions_data = get_directions(current_location, destination)

    # Extract route information
    if 'routes' in directions_data:
        route = directions_data['routes'][0]
        legs = route['legs'][0]
        steps = legs['steps']

        # Display map in web browser
        display_map(current_location, destination)

        # Provide audio guidance for each step
        for step in steps:
            instruction = step['html_instructions']
            distance = step['distance']['text']
            text_to_speech(instruction)
            text_to_speech(distance)
            # Wait for a few seconds before the next instruction
            time.sleep(5)
    else:
        text_to_speech("Sorry, I couldn't find directions to your destination.")

# Main function
def main():
    # Obtain current location and destination
    current_location = get_current_location()
    if current_location:
        destination = get_destination()
        if destination:
            navigate(current_location, destination)

if __name__ == "__main__":
    main()
